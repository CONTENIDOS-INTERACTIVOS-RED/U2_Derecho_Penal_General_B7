{"remainingRequest":"/home/runner/work/U2_Derecho_Penal_General_B7/U2_Derecho_Penal_General_B7/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U2_Derecho_Penal_General_B7/U2_Derecho_Penal_General_B7/src/views/curso/Tema3.vue?vue&type=template&id=fd0b3e14&lang=pug&","dependencies":[{"path":"/home/runner/work/U2_Derecho_Penal_General_B7/U2_Derecho_Penal_General_B7/src/views/curso/Tema3.vue","mtime":1746322854035},{"path":"/home/runner/work/U2_Derecho_Penal_General_B7/U2_Derecho_Penal_General_B7/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U2_Derecho_Penal_General_B7/U2_Derecho_Penal_General_B7/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/U2_Derecho_Penal_General_B7/U2_Derecho_Penal_General_B7/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/U2_Derecho_Penal_General_B7/U2_Derecho_Penal_General_B7/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U2_Derecho_Penal_General_B7/U2_Derecho_Penal_General_B7/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}